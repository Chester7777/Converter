[{"C:\\React\\WednesdayСonverter\\src\\redux\\state.ts":"1","C:\\React\\WednesdayСonverter\\src\\lessons\\lesson1\\lesson1.tsx":"2","C:\\React\\WednesdayСonverter\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx":"3","C:\\React\\WednesdayСonverter\\src\\index.tsx":"4","C:\\React\\WednesdayСonverter\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx":"5","C:\\React\\WednesdayСonverter\\src\\App.tsx":"6","C:\\React\\WednesdayСonverter\\src\\lessons\\lesson4\\lesson_4.ts":"7","C:\\React\\WednesdayСonverter\\src\\lessons\\lesson4\\Lesson4.tsx":"8","C:\\React\\WednesdayСonverter\\src\\redux\\currencyReducer.ts":"9","C:\\React\\WednesdayСonverter\\src\\redux\\actions.ts":"10"},{"size":286,"mtime":1609751766196,"results":"11","hashOfConfig":"12"},{"size":860,"mtime":1615124990084,"results":"13","hashOfConfig":"14"},{"size":3871,"mtime":1609757735301,"results":"15","hashOfConfig":"12"},{"size":319,"mtime":1609752860853,"results":"16","hashOfConfig":"14"},{"size":3855,"mtime":1624783143534,"results":"17","hashOfConfig":"12"},{"size":615,"mtime":1624785786587,"results":"18","hashOfConfig":"12"},{"size":12509,"mtime":1616930426070,"results":"19","hashOfConfig":"14"},{"size":513,"mtime":1616927469050,"results":"20","hashOfConfig":"14"},{"size":1088,"mtime":1609753971088,"results":"21","hashOfConfig":"14"},{"size":1107,"mtime":1624780322281,"results":"22","hashOfConfig":"12"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"pmoed",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1hrllx1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\WednesdayСonverter\\src\\redux\\state.ts",[],["47","48"],"C:\\React\\WednesdayСonverter\\src\\lessons\\lesson1\\lesson1.tsx",[],["49","50"],"C:\\React\\WednesdayСonverter\\src\\components\\CurrencyExchange\\CurrencyExchange.tsx",[],"C:\\React\\WednesdayСonverter\\src\\index.tsx",[],"C:\\React\\WednesdayСonverter\\src\\containers\\CurrencyExchangeContainer\\CurrencyEContainer.tsx",[],"C:\\React\\WednesdayСonverter\\src\\App.tsx",["51","52"],"C:\\React\\WednesdayСonverter\\src\\lessons\\lesson4\\lesson_4.ts",["53"],"// import {log} from \"util\";\r\n//\r\n// console.log(\"lesson 4\");\r\n//\r\n// // http://latentflip.com/loupe/?code=JC5vbignYnV0dG9uJywgJ2NsaWNrJywgZnVuY3Rpb24gb25DbGljaygpIHsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gdGltZXIoKSB7CiAgICAgICAgY29uc29sZS5sb2coJ1lvdSBjbGlja2VkIHRoZSBidXR0b24hJyk7ICAgIAogICAgfSwgMjAwMCk7Cn0pOwoKY29uc29sZS5sb2coIkhpISIpOwoKc2V0VGltZW91dChmdW5jdGlvbiB0aW1lb3V0KCkgewogICAgY29uc29sZS5sb2coIkNsaWNrIHRoZSBidXR0b24hIik7Cn0sIDUwMDApOwoKY29uc29sZS5sb2coIldlbGNvbWUgdG8gbG91cGUuIik7!!!PGJ1dHRvbj5DbGljayBtZSE8L2J1dHRvbj4%3D\r\n// // https://jakearchibald.com/2015/tasks-microtasks-queues-and-schedules/\r\n//https://thebestcode.ru/\r\n\r\n\r\n// async function f() {\r\n// let a = 10;\r\n// //throw 0;\r\n// return 5;\r\n// }\r\n//\r\n// console.log(f());\r\n\r\n// async function some() {\r\n//     // some code\r\n//     try {\r\n//         let result = await API.someRequest();\r\n//         setState(result);\r\n//     } caches(e) {\r\n//         console.log(e);\r\n//     }\r\n// }\r\n\r\n// async function test() {\r\n//     let result = await new Promise(resolve => {\r\n//         setTimeout(resolve, 2000, 'work');\r\n//     });\r\n//     console.log(result);\r\n//     //return result\r\n// }\r\n//\r\n// test();\r\n //console.log(test())\r\n\r\n// async function test() {\r\n//     let result = await new Promise(resolve => {\r\n//         setTimeout(resolve, 2000, 'work');\r\n//     });\r\n//     console.log(result);\r\n// }\r\n// let a = 10;\r\n// test();\r\n// console.log(a);\r\n\r\n\r\n// async function test() {\r\n//     try {\r\n//         let result = await new Promise((resolve, reject) => {\r\n//             setTimeout(reject, 2000, 'Yo');\r\n//         });\r\n//         console.log(result);\r\n//     } catch (e) {\r\n//         try {\r\n//             console.log('catch', e);\r\n//         } catch (e) {\r\n//\r\n//         }\r\n//     }\r\n// }\r\n// test();\r\n\r\n// async function test() {\r\n//     let result = await new Promise((resolve, reject) => {\r\n//         setTimeout(reject, 2000, 'work');\r\n//     });\r\n// }\r\n//\r\n// test().catch(e => console.log(e));\r\n\r\n\r\n//Task 1\r\n\r\n// setTimeout(()=> console.log(1), 0);\r\n// console.log(2);\r\n// (() => console.log(3))();\r\n// Promise.resolve(console.log(4));\r\n//2,3,4,1\r\n\r\n\r\n//Task 2\r\n\r\n// new Promise((res, rej) => {\r\n//     console.log(1);\r\n// })\r\n// new Promise((res, rej) => {\r\n//     setTimeout(()=> console.log(2), 0);\r\n// })\r\n// Promise.resolve(setTimeout(()=> console.log(3), 0));\r\n// console.log(4);\r\n// Promise.reject(console.log(5));\r\n//1,4,5,2,3\r\n\r\n\r\n//Task 3\r\n\r\n// (function(){\r\n//     setTimeout(()=> console.log(1), 100);\r\n// })();\r\n// console.log(2);\r\n// new Promise((res, rej) => {\r\n//     setTimeout(()=> console.log(3), 50);\r\n// })\r\n// function f() {\r\n//     console.log(4);\r\n// }\r\n// Promise.resolve(console.log(5));\r\n//2,5,3,1\r\n\r\n// Task 4\r\n\r\n// function f(num:number) {\r\n//     console.log(num);\r\n// }\r\n// Promise.resolve(1)\r\n//     .then(f);\r\n// (function(){\r\n//     console.log(2);\r\n// })();\r\n// console.log(3);\r\n// new Promise((res, rej) => {\r\n//     console.log(4);\r\n// });\r\n// setTimeout(f, 0, 5);\r\n\r\n// [1, 2, 3].forEach(item => console.log(item));\r\n// [1, 2, 3].forEach(f);\r\n\r\n// 2 3 4 1 5\r\n\r\n// Task 5\r\n//\r\n// console.log(1);\r\n// function f() {\r\n//     console.log(2);\r\n// }\r\n// setTimeout(()=>{\r\n//     console.log(3);\r\n//     let p = new Promise((res, rej) => {\r\n//         console.log(4);\r\n//         res();\r\n//     });\r\n//     p.then(() => f())\r\n// },0);\r\n// let l = new Promise((res, rej) => {\r\n//     console.log(5);\r\n//     rej();\r\n// });\r\n// l.then(res => console.log(res)).catch(() => console.log(6));\r\n// console.log(7);\r\n//1,5,7,6,3,4,2\r\n\r\n// Task 6\r\n\r\n// setTimeout(() => console.log(1), 0);\r\n// console.log(2);\r\n// new Promise((resolve, reject) => {\r\n//     setTimeout(() => reject(console.log(3)), 1000);\r\n// }).catch(() => console.log(4));\r\n// console.log(5);\r\n//2,5,1,3,4\r\n\r\n//Task 7\r\n\r\n// before\r\n// async function sleep(ms: number) {\r\n//     setTimeout(() => {\r\n//         console.log(ms);\r\n//     }, ms*100);\r\n// }\r\n\r\n\r\n// after\r\n// async function sleep(ms: number) {\r\n//     return  new Promise(resolve => setTimeout(() => {\r\n//         console.log(ms);\r\n//         resolve()\r\n//     }, ms*100))\r\n// }\r\n//\r\n// async function show() {\r\n//     await sleep(3)\r\n//     await sleep(2)\r\n//     await sleep(1)\r\n// }\r\n//\r\n// show();\r\n\r\n\r\n//Task 8\r\n// let pr1 = new Promise((res) => {\r\n//     res(10);\r\n// });\r\n// let pr2 = new Promise((res) => {\r\n//     res(0)\r\n// });\r\n// pr1\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 2;\r\n//     })\r\n//     .then(console.log);\r\n// pr2\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then((res: any) => {\r\n//         console.log(res);\r\n//         return res + 1;\r\n//     })\r\n//     .then(console.log);\r\n//pr1-10, pr2-0, pr1-12, pr2-1, pr1-14, pr2-2\r\n\r\n\r\n\r\n\r\n\r\n// // Task 01\r\n// // Создайте промис, который постоянно находиться в состоянии pending.\r\n// // В конструкторе промиса выведите в консоль сообщение \"Promise is creat\r\n// export let promise1 = new Promise(function (resolve, reject) {\r\n//     resolve(\"Promise is creat\")\r\n//     // resolve(\"done\");\r\n//     // reject(new Error(\"…\")); // игнорируется\r\n//     // setTimeout(() => resolve(\"…\")); // игнорируется\r\n// });\r\n// export let promiseCallback = () => promise1.then(result => console.log(result))\r\n\r\n// export let promise = async function PromiseCreat () {\r\n//      console.log(\"Promise is creat\")\r\n//      .pending(console.log(\"Promise is created\"))\r\n// }\r\n//\r\n// let promise1 = new Promise(resolve => resolve + 1);\r\n// //@ts-ignore\r\n// let promise2 = new Promise(resolve => 2)\r\n// let Promise: any = new Promise.all([promise1, promise2])\r\n//\r\n//\r\n// // Task 02\r\n// // Создайте промис, который после создания сразу же переходит в состояние resolve\r\n// // и возвращает строку 'Promise Data'\r\n// // Получите данные промиса и выведите их в консоль\r\n// export const promise2 = new Promise((resolve) => {\r\n//     resolve(\"Promise Data\")\r\n// })\r\n// promise2.then(\r\n//     result => console.log(result)\r\n// )\r\n//\r\n// // Task 03\r\n// // Создайте промис, который после создания сразу же переходит в состояние rejected\r\n// // и возвращает строку 'Promise Error'\r\n// // Получите данные промиса и выведите их в консоль\r\n// export const promise3 = new Promise((resolve, reject) => {\r\n//     reject(new Error(\"Promise Error\"))\r\n// })\r\n// promise3.catch(\r\n//     err => console.log(err)\r\n// )\r\n//\r\n// // Task 04\r\n// // Создайте промис, который переходит в состояние resolved через 3с.\r\n// // (Используйте setTimeout)\r\n// // и возвращает строку 'Promise Data'\r\n// // Получите данные промиса и выведите их в консоль\r\n// export const promise4 = new Promise((resolve => {\r\n//     setTimeout(() => {\r\n//         resolve(\"Promise Data\")\r\n//     }, 3000)\r\n// }))\r\n// promise4.then(\r\n//     result => console.log(result)\r\n// )\r\n//\r\n// // Task 05\r\n// // Создайте литерал объекта handlePromise со следующими свойствами:\r\n// // promise, resolve, reject, onSuccess, onError\r\n// // Проинициализируйте первые три свойства null,\r\n// // а последние два функциями, которые принимают один параметр и выводят\r\n// // в консоль сообщения: первая - `Promise is resolved with data: ${paramName}`\r\n// // вторая - `Promise is rejected with error: ${paramName}`\r\n// // Создайте три обработчика события click для кнопок \"Create Promise\", \"Resolve Promise\", \"Reject Promise\".\r\n// // Первый обработчик, создает промис, заполняет первые три свойства,\r\n// // описаного выше объекта: свойство promise получает новый созданный промис,\r\n// // свойства resolve и reject получают ссылки на соответствующие функции\r\n// // resolve и reject. Следующие два обработчика запускают методы resolve и reject.\r\n//\r\ntype testObjectType = {\r\n    promise: null | Promise<any>;\r\n    resolve: null | Function;\r\n    reject: null | Function;\r\n    onSuccess: (paramName: string) => void;\r\n    onError: (paramName: string) => void;\r\n}\r\n\r\nconst handlePromise:testObjectType = {\r\n    promise: null,\r\n    reject: null,\r\n    resolve: null,\r\n    onSuccess: (paramName: string) => console.log(`Promise is resolved with data: ${paramName}`),\r\n    onError: (paramName: string) => console.log(`Promise is rejected with error: ${paramName}`),\r\n}\r\n\r\nexport const createPromise = () => {\r\n    const somePromise: Promise<string> = new Promise((res, rej) => {\r\n        handlePromise.resolve = res;\r\n        handlePromise.reject = rej;\r\n    });\r\n    handlePromise.promise = somePromise;\r\n    handlePromise.promise.then(res => handlePromise.onSuccess(res)) //then(handlePromise.onSuccess)\r\n        .catch(err => handlePromise.onError(err));\r\n}\r\n\r\nexport const resolvePromise = () => {\r\n    handlePromise.resolve && handlePromise.resolve('10');\r\n}\r\n\r\nexport const rejectPromise = () => {\r\n    handlePromise.reject && handlePromise.reject('0');\r\n}\r\n\r\n//@ts-ignore\r\nwindow.handlePromise = handlePromise;\r\n\r\n// Task 06\r\n// Создайте промис, который через 1 с возвращает строку \"My name is\".\r\n// Создайте функцию onSuccess, которая получает один параметр,\r\n// прибавляет к нему Ваше имя и возвращает новую строку из функции\r\n// Создайте функцию print, которая выводит в консоль значение своего параметра\r\n// Добавьте два метода then и передайте созданные функции.\r\n\r\n// function onSuccess(v: string): string {\r\n//     return `${v} Eugene`;\r\n// }\r\n//\r\n// function print(v: string): void {\r\n//     console.log(v);\r\n// }\r\n//\r\n// const myName: Promise<string> = new Promise((res, rej) => setTimeout(res, 2000, 'MyName'));\r\n//\r\n// myName.then(onSuccess).then(print);\r\n\r\n// Task 7\r\n// Создайте три промиса. Первый промис возвращает объект { name: \"Anna\" } через 2с,\r\n// второй промис возвращает объект {age: 16} через 3 с, а третий {city: ''} через 4с.\r\n// Получите результаты работы промисов, объедините свойства объектов\r\n// и выведите в консоль {name, age, city}\r\n//\r\n// let prom1: Promise<Object> = new Promise(res => setTimeout(() => {\r\n//     res({name: 'Anna'})\r\n// }, 2000));\r\n//\r\n// let prom2: Promise<Object> = new Promise(res => setTimeout(() => {\r\n//     res({age: 16})\r\n// }, 3000));\r\n//\r\n// let prom3: Promise<Object> = new Promise(res => setTimeout(() => {\r\n//     res({city: ''})\r\n// }, 4000));\r\n//вариант 1\r\n// Promise\r\n//     .all( [ prom1, prom2, prom3 ] )\r\n//     .then( result => Object.assign( {}, ...result ) )\r\n//     .then( result => console.log( result ) );\r\n\r\n//вариант 2\r\n// let result: Promise<Array<Object>> = Promise.all([prom1, prom2, prom3])\r\n// result.then(([a,b,c]: Array<Object>) => ({...a,...b,...c})).then(console.log);\r\n\r\n//вариант 3\r\n// Promise.all([prom1, prom2, prom3])\r\n//     .then(value =>  {\r\n//         let result = {};\r\n//         //@ts-ignore\r\n//         // value.map(v => {\r\n//         //     //@ts-ignore\r\n//         //     //for (let attrname in v) { result[attrname] = v[attrname]; }\r\n//         //     //Object.assign(result, v);\r\n//         // })\r\n//         // return result\r\n//         return Object.assign(result, ...value);\r\n//     })\r\n//     .then(v => {\r\n//         for (let attrname in v) {\r\n//             //@ts-ignore\r\n//             console.log(v[attrname])\r\n//         }\r\n//     })\r\n//\r\n\r\n\r\n\r\n// just a plug\r\nexport default () => {\r\n};","C:\\React\\WednesdayСonverter\\src\\lessons\\lesson4\\Lesson4.tsx",[],["54","55"],"C:\\React\\WednesdayСonverter\\src\\redux\\currencyReducer.ts",[],"C:\\React\\WednesdayСonverter\\src\\redux\\actions.ts",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"56","replacedBy":"60"},{"ruleId":"58","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":5,"column":8,"nodeType":"64","messageId":"65","endLine":5,"endColumn":15},{"ruleId":"62","severity":1,"message":"66","line":6,"column":8,"nodeType":"64","messageId":"65","endLine":6,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":404,"column":1,"nodeType":"69","endLine":405,"endColumn":3},{"ruleId":"56","replacedBy":"70"},{"ruleId":"58","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],["72"],["73"],"@typescript-eslint/no-unused-vars","'Lesson3' is defined but never used.","Identifier","unusedVar","'Lesson4' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration",["72"],["73"],"no-global-assign","no-unsafe-negation"]